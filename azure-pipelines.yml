# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  default

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloudChocolateFactory'
    organization: '210503-reston-net'
    scannerMode: 'MSBuild'
    projectKey: '210503-Reston-NET_Malik-Sehar-P1'
    projectName: 'Malik-Sehar-P1'
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '$(solution)'
- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
        command: 'test'
        projects: '**/STests/STests.csproj'
- task: SonarCloudAnalyze@1
  displayName: Sonar code Analysis
- task: SonarCloudPublish@1
  displayName: Publish code analysis
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    zipAfterPublish: true
    projects: '**/StoreWebUI/StoreWebUI.csproj'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(ccb0da5f-2451-45f6-ba61-fbd182a5cb61)'
    appType: 'webApp'
    WebAppName: 'ChocoFactory'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
